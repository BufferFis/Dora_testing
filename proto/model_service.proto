syntax = "proto3";

package model_service;

service ModelService {
  rpc ProcessForward(HiddenStatesRequest) returns (HiddenStatesResponse);
  rpc ProcessTrainForward(HiddenStatesRequest) returns (HiddenStatesResponse);
  rpc ProcessBackward(GradientsRequest) returns (BackwardResponse);
  rpc StartTraining(TrainingConfigRequest) returns (TrainingInitResponse);
  rpc EndEpoch(EpochEndRequest) returns (EpochEndResponse);
  rpc GetPruneStats(EmptyRequest) returns (PruneStatsResponse);
}

message EmptyRequest {}

message TensorData {
  repeated int64 shape = 1;
  bytes data = 2;
  string dtype = 3;
}

message HiddenStatesRequest {
  TensorData hidden_states = 1;
}

message HiddenStatesResponse {
  TensorData hidden_states = 1;
}

message GradientsRequest {
  TensorData gradients = 1;
  float loss = 2;
}

message BackwardResponse {
  int32 step = 1;
  string status = 2;
}

message TrainingConfigRequest {
  float learning_rate = 1;
  int32 batch_size = 2;
  int32 epochs = 3;
  int32 grad_accumulation_steps = 4;
}

message TrainingInitResponse {
  string status = 1;
  int32 trainable_params = 2;
}

message EpochEndRequest {
  bool is_final = 1;
}

message EpochEndResponse {
  string status = 1;
  int32 epoch = 2;
  float avg_loss = 3;
}

message PruneStatsResponse {
  int32 step = 1;
  int32 total_lora_layers = 2;
  int32 total_active_ranks = 3;
  int32 potential_ranks = 4;
  map<string, int32> active_rank_counts = 5;
}